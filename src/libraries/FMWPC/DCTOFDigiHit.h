// $Id$
//

/*! **File**: DCTOFDigiHit.h
 *+ Created: Thu 05 May 2022 10:15:51 AM EDT
 *+ Creator: Beni
 *+ Purpose: Container class object holding raw fADC250 data: integral, pulse, pedestal, time
 */

/// \defgroup CTOFDetector CTOF Detector Objects

#ifndef _DCTOFDigiHit_
#define _DCTOFDigiHit_

#include <JANA/JObject.h>
#include <JANA/JFactory.h>


/*! \file DCTOFDigiHit.h 
 * container class hodling raw fADC250 DATA for CTOF hits.
 */



// the follwing is for doxygen describing the class
/*! \class DCTOFDigiHit 
 * This is a container class holding raw data from CTOF fADC250s
 * The data is generated by the algorithm running on the FPGAs of the ADC modules
 * and converted to uint32_t values for this container class by the data reader/translator code.
 */
class DCTOFDigiHit:public jana::JObject{
 public:
  JOBJECT_PUBLIC(DCTOFDigiHit);
  
  int plane;   ///<  (0: vertical)
  int bar;     ///< paddle number: 1, 2, 3, 4)
  int end;     ///< North/South 0/1 (same as left/right) looking in beam direction, TOP/BOTTIOM 0/1
  uint32_t pulse_integral; ///< identified pulse integral as returned by FPGA algorithm
  uint32_t pulse_time;     ///< identified pulse time as returned by FPGA algorithm
  uint32_t pedestal;       ///< pedestal info used by FPGA (if any)
  uint32_t QF;             ///<  Quality Factor from FPGA algorithms
  uint32_t nsamples_integral;    ///<  number of samples used in integral 
  uint32_t nsamples_pedestal;    ///< number of samples used in pedestal
  uint32_t pulse_peak;           ///<  maximum ADC value in pulse peak (pedestal is NOT subtracted)
  
  uint32_t datasource;           ///<  0=window raw data, 1=old(pre-Fall16) firmware, 2=Df250PulseData
  
  // This method is used primarily for pretty printing
  // the second argument to AddString is printf style format
  /*! \fn void toStrings(vecotr<pair<string,string>> &items) 
   * standard method by hd_dump to print the container class data.
  */
  void toStrings(vector<pair<string,string> > &items)const{ 
    AddString(items, "bar", "%d", bar);
    AddString(items, "plane", "%d", plane);
    AddString(items, "end", "%d", end);
    AddString(items, "pulse_integral", "%d", pulse_integral);
    AddString(items, "pulse_peak", "%d", pulse_peak);
    AddString(items, "pulse_time", "%d", pulse_time);
    AddString(items, "pedestal", "%d", pedestal);
    AddString(items, "QF", "%d", QF);
    AddString(items, "nsamples_integral", "%d", nsamples_integral);
    AddString(items, "nsamples_pedestal", "%d", nsamples_pedestal);
  }
  
};

#endif // _DCTOFDigiHit_

